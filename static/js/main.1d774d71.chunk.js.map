{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","newProductsInCard","productIsExistInCart","find","product","id","get","amount","data","currentAmountProduct","currentAmount","toast","error","newProduct","push","setItem","stringify","updateProductAmount","Provider","value","handleEmptyCart","clear","removeProduct","newProductsUpdated","indexProductCart","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","useEffect","newProducts","map","priceFormatted","price","loadProducts","src","image","alt","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","history","useHistory","cartFormatted","subTotal","total","sumTotal","disabled","handleProductDecrement","readOnly","handleProductIncrement","Modal","success","content","onOk","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d774d71.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import { createContext, ReactNode, useContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { api } from \"../services/api\";\nimport { Product } from \"../types\";\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  handleEmptyCart: () => void;\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n    const storagedCart = localStorage.getItem(\"@SiteCompras:cart\");\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  function handleEmptyCart(){\n    setCart([]);\n    localStorage.clear();\n  }\n\n  const addProduct = async (productId: number) => {\n    try {\n      const newProductsInCard = [...cart];\n      const productIsExistInCart = newProductsInCard.find(\n        (product) => product.id === productId\n      );\n\n      const {\n        data: { amount },\n      } = await api.get(`/stock/${productId}`);\n      const currentAmountProduct = productIsExistInCart\n        ? productIsExistInCart.amount\n        : 0;\n      const currentAmount = currentAmountProduct + 1;\n      if (currentAmount > amount) {\n        toast.error(\"Quantidade solicitada fora de estoque\");\n        return;\n      }\n\n      if (productIsExistInCart) {\n        productIsExistInCart.amount = currentAmount;\n      } else {\n        const { data } = await api.get(`/products/${productId}`);\n        const newProduct = { ...data, amount: 1 };\n        newProductsInCard.push(newProduct);\n      }\n      setCart(newProductsInCard);\n      localStorage.setItem(\n        \"@SiteCompras:cart\",\n        JSON.stringify(newProductsInCard)\n      );\n    } catch {\n      toast.error(\"Erro na adição do produto\");\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const newProductsUpdated = [...cart];\n      const indexProductCart = cart.findIndex((product) => {\n        return product.id === productId;\n      });\n      if (indexProductCart >= 0) {\n        newProductsUpdated.splice(indexProductCart, 1);\n        setCart(newProductsUpdated);\n        localStorage.setItem(\n          \"@SiteCompras:cart\",\n          JSON.stringify(newProductsUpdated)\n        );\n      } else {\n        toast.error(\"Erro na remoção do produto\");\n        return;\n      }\n    } catch {\n      toast.error(\"Erro na remoção do produto\");\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if (amount <= 0) return;\n\n      const { data } = await api.get(`/stock/${productId}`);\n      const amountStock = data.amount;\n      if (amountStock < amount) {\n        toast.error(\"Quantidade solicitada fora de estoque\");\n        return;\n      }\n\n      const newProductsInCard = [...cart];\n      const productIsExistInCart = newProductsInCard.find(\n        (product) => product.id === productId\n      );\n      if (productIsExistInCart) {\n        productIsExistInCart.amount = amount;\n        setCart(newProductsInCard);\n        localStorage.setItem(\n          \"@SiteCompras:cart\",\n          JSON.stringify(newProductsInCard)\n        );\n      } else {\n        toast.error(\"Ops! Houve um erro na alteração de quantidade do produto\");\n        return;\n      }\n    } catch {\n      toast.error(\"Ops! Houve um erro na alteração de quantidade do produto\");\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, handleEmptyCart,  addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","import  { useState, useEffect } from \"react\";\nimport { MdAddShoppingCart } from \"react-icons/md\";\n\nimport { ProductList } from \"./styles\";\nimport { api } from \"../../services/api\";\nimport { formatPrice } from \"../../util/format\";\nimport { useCart } from \"../../hooks/useCart\";\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n}\n\ninterface ProductFormatted extends Product {\n  priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\n  const { addProduct, cart } = useCart();\n\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\n    const newSumAmount = { ...sumAmount };\n    newSumAmount[product.id] = product.amount;\n    return newSumAmount;\n  }, {} as CartItemsAmount);\n\n  useEffect(() => {\n    async function loadProducts() {\n      const { data } = await api.get<Product[]>(\"/products\");\n      const newProducts = data.map((product) => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n      }));\n    \n      setProducts(newProducts);\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id: number) {\n    addProduct(id);\n  }\n\n  return (\n    <ProductList>\n      {products.map((product) => {\n        return (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button\n              type=\"button\"\n              data-testid=\"add-product-button\"\n              onClick={() => handleAddProduct(product.id)}\n            >\n              <div data-testid=\"cart-product-quantity\">\n                <MdAddShoppingCart size={16} color=\"#FFF\" />\n                {cartItemsAmount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        );\n      })}\n    </ProductList>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n\n    svg {\n      color: #7159c1;\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      svg {\n        color: ${darken(0.06, '#7159c1')};\n      }\n    }\n\n    &:disabled {\n      svg {\n        color: ${lighten(0.25, '#7159c1')};\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import {\n  MdDelete,\n  MdAddCircleOutline,\n  MdRemoveCircleOutline,\n} from \"react-icons/md\";\n\nimport { Modal } from 'antd';\nimport { useHistory } from \"react-router-dom\";\n\nimport { useCart } from \"../../hooks/useCart\";\nimport { formatPrice } from \"../../util/format\";\nimport { Container, ProductTable, Total } from \"./styles\";\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n  amount: number;\n}\n\nconst Cart = (): JSX.Element => {\n  const history = useHistory();\n\n  const { cart, removeProduct, updateProductAmount, handleEmptyCart } = useCart();\n\n  const cartFormatted = cart.map((product) => ({\n    ...product,\n    priceFormatted: formatPrice(product.price),\n    subTotal: formatPrice(product.amount * product.price),\n  }));\n  const total = formatPrice(\n    cart.reduce((sumTotal, product) => {\n      return sumTotal + product.amount * product.price;\n    }, 0)\n  );\n\n  function handleProductIncrement(product: Product) {\n    updateProductAmount({ productId: product.id, amount: product.amount + 1 });\n  }\n\n  function handleProductDecrement(product: Product) {\n    updateProductAmount({ productId: product.id, amount: product.amount - 1 });\n  }\n\n  function handleRemoveProduct(productId: number) {\n    removeProduct(productId);\n  }\n\n  function countDown() {\n\n    Modal.success({\n      title: 'Pedido finalizado com sucesso!',\n      content: `Continue comprando.`,\n      onOk() { history.push(\"/\")\n      handleEmptyCart()},\n      \n    });\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th aria-label=\"product image\" />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th aria-label=\"delete icon\" />\n          </tr>\n        </thead>\n        <tbody>\n          {cartFormatted.map((product) => {\n            return (\n              <tr key={product.id} data-testid=\"product\">\n                <td>\n                  <img src={product.image} alt={product.title} />\n                </td>\n                <td>\n                  <strong>{product.title}</strong>\n                  <span>{product.priceFormatted}</span>\n                </td>\n                <td>\n                  <div>\n                    <button\n                      type=\"button\"\n                      data-testid=\"decrement-product\"\n                      disabled={product.amount <= 1}\n                      onClick={() => handleProductDecrement(product)}\n                    >\n                      <MdRemoveCircleOutline size={20} />\n                    </button>\n                    <input\n                      type=\"text\"\n                      data-testid=\"product-amount\"\n                      readOnly\n                      value={product.amount}\n                    />\n                    <button\n                      type=\"button\"\n                      data-testid=\"increment-product\"\n                      onClick={() => handleProductIncrement(product)}\n                    >\n                      <MdAddCircleOutline size={20} />\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <strong>{product.subTotal}</strong>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    data-testid=\"remove-product\"\n                    onClick={() => handleRemoveProduct(product.id)}\n                  >\n                    <MdDelete size={20} />\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\" onClick={countDown}>Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n};\n\nexport default Cart;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes(){\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n};\n\n\n","export default __webpack_public_path__ + \"static/media/background.d1721c83.svg\";","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'antd/dist/antd.css'; \nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n\n  a {\n    text-decoration: none;\n    transition: opacity 0.2s;\n\n    &:hover {\n      opacity: 0.7;\n    }\n\n    h2 {\n      color: white;\n    }\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import { Link } from \"react-router-dom\";\nimport { MdShoppingBasket } from \"react-icons/md\";\nimport { Container, Cart } from \"./styles\";\nimport { useCart } from \"../../hooks/useCart\";\n\nconst Header = (): JSX.Element => {\n  const { cart } = useCart();\n  const cartSize = cart.length;\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <h2>Site de compras</h2>\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span data-testid=\"cart-size\">\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\n          </span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport Header from './components/Header';\nimport { CartProvider } from './hooks/useCart';\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </CartProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}